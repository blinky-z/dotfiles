# vim: set ft=tmux:

# reload config with <prefix> + R
# ---
# check set options:
# show-options [-spw] [-g], 
#   -s (server), -p (pane), -w (window)
#   -g (global)
# ---
# common key bindings (prefix required):
#   c - new window, p - prev window, n - next window
#   Shift + Left - prev window, Right - next window, Down - new window
#   v - split vertically
#   h - split horizontally
#   q - briefly show pane numbers and switch to n-th pane if n pressed, where n is a number
#   w - show windows
#   x - close current pane
#   X - close current window
# more:
#   Ctrl-h/j/k/l - switch panes (no prefix required)
# ---
# copy mode
# most keybindings resemble vim one:
#   How to copy:
#     Ctrl-[ to enter tmux vi copy mode
#     Move around with vim navigation keys
#     Begin highlight with Space or v or ctrl-v
#     Copy with Enter or y
#     Paste with Ctrl-]
#   ---
#   How to scroll:
#     Half page down               C-d
#     Half page up                 C-u or D
#     Next page                    C-f
#     Previous page                C-b
#     Scroll down                  C-Down or C-e
#     Scroll up                    C-Up or C-y
#     Search again    n or N (forward, backward)
#     Search          / or ? (forward, backward)
# ---
# search:
#   Enter copy mode via Ctrl-[
#   Press / or ? to search forward / backward just like in Vim
#   

# do not start a login shell on new pane
# set -g default-command "${SHELL}"

# terminal configuration
# see https://wiki.archlinux.org/title/Tmux#Correct_the_TERM_variable_according_to_terminal_type
# set the default TERM
set -g default-terminal screen
# update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
# determine if we should enable 256-colour support
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

set -g focus-events on
set -g automatic-rename off
set -g status-interval 5
set set-clipboard on
set -s escape-time 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
setw -g automatic-rename on
# set -gw xterm-keys on
set -g history-limit 10000
# mouse support is subpar out of box, but with the plugin below it's okay
set -g mouse on

# better mouse support via NHDaly/tmux-better-mouse-mode
set -g @scroll-down-exit-copy-mode "on"
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
set -g @scroll-speed-num-lines-per-scroll "3"

# copy mode
# use vi-style key bindings in copy mode
setw -g mode-keys vi

# enter copy-mode with Enter
bind Enter copy-mode

# add more vi-style key bindings:
#   - visual mode with 'v'
#   - visual rectange mode with 'ctrl-v'/'ctrl-q'
#   - yank with 'y'
unbind -T copy-mode-vi v
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi м send -X begin-selection
bind -T copy-mode-vi 'C-q' send -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi 'C-c' send -X copy-pipe
bind -T copy-mode-vi y send -X copy-pipe
bind -T copy-mode-vi н send -X copy-pipe
# pasting with lowercase 'p' is not possible as this keybinding is used for going to prev window
bind P paste-buffer
# copy with dragging
# not needed, already works
# bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'clip'

# set to 0 to avoid any delay when switching modes in Vim
set -s escape-time 0
# time in ms to repeat the last key-bind, if it's repeatable (-r option)
# e.g. <prefix> + x closes the current pane and can be repeated
# or <prefix> + </>, which moves the window
set -g repeat-time 300

# set a new prefix
# I like Ctrl-Space since my Vim has Space as a leader
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# switch windows via:
# open a new window via Shift + down arrow
bind -n M-H previous-window
bind -n M-L next-window
bind -n S-Left previous-window
bind -n S-Right next-window
bind -n S-Down new-window

bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

bind -r "x" kill-pane
bind -r "X" kill-window
# close all windows but current
bind "O" kill-window -a

# I had to disable the following mappings because I couldn't make Ctrl and Alt work in Vim
# switch panes via Alt + arrows/hjkl
# also you can switch panes via Ctrl + hjkl (powered by vim-tmux-navigator)
# alt mapping don't provide good integration with vim panes though, 
# since vim doesn't support alt key if not running as gui
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R
# bind -n M-Left select-pane -L
# bind -n M-Down select-pane -D
# bind -n M-Up select-pane -U
# bind -n M-Right select-pane -R

# also tried using ctrl - doesn't work in Vim as well
# bind -n C-Left select-pane -L
# bind -n C-Down select-pane -D
# bind -n C-Up select-pane -U
# bind -n C-Right select-pane -R

# add more intuitive keybindings and open a new pane in the same path
# by the way I use reversed horizontal/vertical mappings because these make much more sense to me
bind-key h split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"


# -----------
# Catppuccin
# -----------

set -g @catppuccin_flavor 'mocha' # latte, frappe, macchiato, or mocha

# see https://github.com/catppuccin/tmux?tab=readme-ov-file#config-1
set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " | "

# see all the available format variables: `tmux display-message -a`
set -g @catppuccin_window_default_fill "none"
set -g @catppuccin_window_default_text "#{window_name}"

set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_window_current_text "#{window_name}"

set -g @catppuccin_status_modules_right "application user host date_time"
set -g @catppuccin_status_modules_left "null"
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_status_justify "left"
set -g @catppuccin_status_fill "icon"

set -g @catppuccin_date_time_text "%H:%M"
set -g @catppuccin_host_text "#H"
set -g @catppuccin_user_text "#U"
set -g @catppuccin_directory_text "#{pane_current_path}"


# --------
# PLUGINS
# --------

# Install plugins with <prefix> + I

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# switch seamlessly between both tmux and vim panes
# install the same plugin in Vim as well
# the default mappings are Ctrl - h/j/k/l
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'soyuka/tmux-current-pane-hostname'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

